--- name:default
# Cycle time in seconds. IMPORTANT: This has to be the same value as the period of this component!
cycle_time: 0.02

limits:
  names: ["Joint_one", "Joint_two"]
  elements: [{max: {position: 1.5, speed: 1.0, acceleration: 2.0}, min: {position: -1.0}, max_jerk: 4.0},
             {max: {position: 2.0, speed: 1.0, acceleration: 2.0}, min: {position: -1.5}, max_jerk: 4.0}]

# RML Output position of previous cycle will be used as input for next cycle. If false, use the actual joint position (from joint_state port) as input for the next cycle.
override_input_position: false

# RML Output speed of previous cycle will be used as input for next cycle. If false, use the actual joint speed (from joint_state port) as input for the next cycle.
override_input_speed: true

# RML Output acceleration of previous cycle will be used as input for next cycle. If false, use the actual joint acceleration (from joint_state port) as input for the next cycle.
override_input_acceleration: true

# Behavior when reaching positional limits. Can be one of 0 = RMLFlags::POSITIONAL_LIMITS_IGNORE,1 = RMLFlags::POSITIONAL_LIMITS_ERROR_MSG_ONLY, 2 = RMLFlags::POSITIONAL_LIMITS_ACTIVELY_PREVENT. Only available for Reflexxes Type_IV
positional_limits_behavior: 2

# The synchronization behavior of RML. Can be one of 0 = RMLFlags::PHASE_SYNCHRONIZATION_IF_POSSIBLE, 1 = RMLFlags::ONLY_TIME_SYNCHRONIZATION, 2 = RMLFlags::ONLY_PHASE_SYNCHRONIZATION, 3 = RMLFlags::NO_SYNCHRONIZATION
sync_behavior: 3
